<UserControl x:Class="MineSweeper.GameWindow.CellButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mineSweeper="clr-namespace:MineSweeper"
             mc:Ignorable="d"
             d:DesignHeight="32"
             d:DesignWidth="32"
             x:Name="TheCellButton"
             DataContext="{Binding ViewModel, ElementName=TheCellButton}">
    <Button
        BorderBrush="Gray"
        BorderThickness="1"
        Padding="0"
        HorizontalContentAlignment="Center"
        VerticalContentAlignment="Center">
        <Button.Resources>

            <mineSweeper:HasNeighborCountConverter x:Key="HasNeighborCountConverter"  />

            <Style TargetType="Viewbox">
                <Setter Property="Stretch" Value="Uniform" />
            </Style>

            <Style x:Key="NumberTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="1">
                        <Setter Property="Foreground" Value="Blue" />
                        <Setter Property="Text" Value="1" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="2">
                        <Setter Property="Foreground" Value="Green" />
                        <Setter Property="Text" Value="2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="3" >
                        <Setter Property="Foreground" Value="Navy" />
                        <Setter Property="Text" Value="3" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="4">
                        <Setter Property="Foreground" Value="Navy" />
                        <Setter Property="Text" Value="4" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="5">
                        <Setter Property="Foreground" Value="Brown" />
                        <Setter Property="Text" Value="5" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="6">
                        <Setter Property="Foreground" Value="Cyan" />
                        <Setter Property="Text" Value="6" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="7">
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="Text" Value="7" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding NeighborMinesCount}" Value="8">
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="Text" Value="8" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Button.Resources>

        <Button.Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Content" Value="" />
                <Style.Triggers>

                    <!-- Flagged -->
                    <DataTrigger Binding="{Binding IsFlagged}" Value="True">
                        <Setter Property="Content">
                            <Setter.Value>
                                <TextBlock Text="ðŸš©" FontWeight="Bold" Foreground="DarkRed" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="LightCoral" />
                    </DataTrigger>

                    <!-- Question Mark -->
                    <DataTrigger Binding="{Binding IsQuestionMarked}" Value="True">
                        <Setter Property="Content">
                            <Setter.Value>
                                <TextBlock Text="?" FontWeight="Bold" Foreground="DarkOrange" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="Khaki" />
                    </DataTrigger>

                    <!-- Exploded -->
                    <DataTrigger Binding="{Binding IsExploded}" Value="True">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Viewbox>
                                <TextBlock Text="ðŸ’¥" FontWeight="Bold" Foreground="Red"
                                                                                    Background="Transparent" />
                                </Viewbox>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="Transparent" />
                    </DataTrigger>

                    <!-- Revealed Empty -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsRevealed}" Value="True" />
                            <Condition Binding="{Binding IsExploded}" Value="False" />
                            <Condition Binding="{Binding IsMine}" Value="False" />
                            <Condition Binding="{Binding NeighborMinesCount, Converter={StaticResource HasNeighborCountConverter}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="WhiteSmoke" />
                        <Setter Property="Content" Value="" />
                    </MultiDataTrigger>

                    <!-- Revealed with Mine -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsRevealed}" Value="True" />
                            <Condition Binding="{Binding IsExploded}" Value="False" />
                            <Condition Binding="{Binding IsMine}" Value="True" />
                            <Condition Binding="{Binding NeighborMinesCount, Converter={StaticResource HasNeighborCountConverter}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="WhiteSmoke" />
                        <Setter Property="Content" Value="ðŸ’£" />
                    </MultiDataTrigger>

                    <!-- Revealed with Number -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsRevealed}" Value="True" />
                            <Condition Binding="{Binding IsExploded}" Value="False" />
                            <Condition Binding="{Binding NeighborMinesCount, Converter={StaticResource HasNeighborCountConverter}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Content">
                            <Setter.Value>
                                <Viewbox>
                                <TextBlock Text="{Binding NeighborMinesCount}"
                                           Style="{StaticResource NumberTextBlockStyle}" />
                                </Viewbox>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>

                </Style.Triggers>
            </Style>
        </Button.Style>
        <Button.InputBindings>
            <!-- Right click = toggle flag -->
            <MouseBinding MouseAction="RightClick" Command="{Binding ToggleFlagCommand}" CommandParameter="{Binding ElementName=TheCellButton}" />

            <!-- Touch support (tap = reveal) -->
            <MouseBinding Gesture="LeftClick" Command="{Binding RevealCellCommand}" CommandParameter="{Binding ElementName=TheCellButton}" />
        </Button.InputBindings>
    </Button>
</UserControl>